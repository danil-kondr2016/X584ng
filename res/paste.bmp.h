#ifndef PASTE_BMP_H
#define PASTE_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char paste_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
	0xFF, 0x31, 0x4E, 0x78, 0x51, 0x6A, 0x8E, 0x3B, 0x56, 0x7F, 
	0x3B, 0x56, 0x7F, 0x5C, 0x73, 0x95, 0x86, 0x97, 0xB0, 0xA9, 
	0xB5, 0xC6, 0xCE, 0xD5, 0xDF, 0xF3, 0xF5, 0xF7, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x31, 
	0x4E, 0x78, 0x9F, 0xB1, 0xC5, 0x95, 0xA9, 0xBF, 0x85, 0x9B, 
	0xB4, 0x6D, 0x85, 0xA3, 0x56, 0x72, 0x94, 0x50, 0x6B, 0x8F, 
	0x4A, 0x65, 0x8A, 0x3E, 0x5A, 0x81, 0x47, 0x62, 0x87, 0x5D, 
	0x74, 0x96, 0x90, 0xA0, 0xB6, 0xB8, 0xC2, 0xD0, 0xDB, 0xE0, 
	0xE8, 0xF4, 0xF5, 0xF8, 0xFF, 0xFF, 0xFF, 0x31, 0x4E, 0x78, 
	0xA9, 0xB9, 0xCB, 0x9E, 0xB0, 0xC4, 0x76, 0x97, 0xB3, 0x7B, 
	0x98, 0xB3, 0x79, 0x94, 0xAF, 0x75, 0x8F, 0xAB, 0x6B, 0x86, 
	0xA5, 0x61, 0x7E, 0x9F, 0x51, 0x71, 0x94, 0x44, 0x65, 0x8B, 
	0x3B, 0x5B, 0x83, 0x3A, 0x59, 0x81, 0x3D, 0x5A, 0x82, 0x3F, 
	0x5A, 0x82, 0xFF, 0xFF, 0xFF, 0x31, 0x4E, 0x78, 0xB2, 0xC0, 
	0xD0, 0x7C, 0x9D, 0xB7, 0x63, 0x94, 0xB3, 0x61, 0x94, 0xB3, 
	0x56, 0x89, 0xAA, 0x52, 0x85, 0xA6, 0x56, 0x88, 0xA9, 0x57, 
	0x87, 0xA8, 0x58, 0x80, 0xA1, 0x53, 0x7A, 0x9C, 0x4D, 0x71, 
	0x95, 0x42, 0x66, 0x8C, 0x37, 0x5C, 0x85, 0x2F, 0x52, 0x7D, 
	0xFF, 0xFF, 0xFF, 0x31, 0x4E, 0x78, 0xBB, 0xC8, 0xD6, 0x81, 
	0xA1, 0xBA, 0x7E, 0xAF, 0xC8, 0x9C, 0xD7, 0xEA, 0x8B, 0xD0, 
	0xE6, 0x77, 0xC4, 0xDE, 0x64, 0xB6, 0xD4, 0x55, 0xAA, 0xCA, 
	0x4B, 0x9C, 0xBF, 0x48, 0x90, 0xB4, 0x48, 0x89, 0xAD, 0x4A, 
	0x83, 0xA6, 0x49, 0x82, 0xA5, 0x31, 0x4E, 0x78, 0xFF, 0xFF, 
	0xFF, 0x31, 0x4E, 0x78, 0xC4, 0xCF, 0xDB, 0x8B, 0xA9, 0xBF, 
	0x7D, 0xAC, 0xC4, 0x87, 0xBB, 0xD2, 0x75, 0xAE, 0xC9, 0x73, 
	0xB5, 0xD1, 0x6C, 0xBC, 0xD8, 0x60, 0xBD, 0xDC, 0x4E, 0xB8, 
	0xDB, 0x3D, 0xB1, 0xD7, 0x2C, 0xAB, 0xD4, 0x1C, 0xA3, 0xD0, 
	0x31, 0x8F, 0xB7, 0x31, 0x4E, 0x78, 0xFF, 0xFF, 0xFF, 0x31, 
	0x4E, 0x78, 0xCE, 0xD7, 0xE1, 0x90, 0xAD, 0xC3, 0x80, 0xAD, 
	0xC5, 0x99, 0xCA, 0xDE, 0x7B, 0xB2, 0xCC, 0x69, 0xA4, 0xC1, 
	0x5D, 0x98, 0xB8, 0x56, 0x92, 0xB2, 0x52, 0x96, 0xB7, 0x4B, 
	0x99, 0xBD, 0x39, 0xA4, 0xCB, 0x22, 0xA7, 0xD2, 0x30, 0x91, 
	0xBA, 0x31, 0x4E, 0x78, 0xFF, 0xFF, 0xFF, 0x31, 0x4E, 0x78, 
	0xD7, 0xDE, 0xE7, 0x96, 0xB1, 0xC6, 0x83, 0xAE, 0xC6, 0xB3, 
	0xE0, 0xEE, 0xA2, 0xD9, 0xEB, 0x91, 0xD2, 0xE7, 0x80, 0xCB, 
	0xE4, 0x6D, 0xC2, 0xDF, 0x5B, 0xB3, 0xD4, 0x4D, 0xA5, 0xC8, 
	0x3E, 0xA8, 0xCF, 0x2A, 0xAA, 0xD4, 0x35, 0x92, 0xBA, 0x31, 
	0x4E, 0x78, 0xFF, 0xFF, 0xFF, 0x31, 0x4E, 0x78, 0xE0, 0xE6, 
	0xEC, 0x9B, 0xB6, 0xC9, 0x86, 0xAF, 0xC7, 0xBB, 0xE2, 0xEF, 
	0x6A, 0x9C, 0xB9, 0x68, 0x9D, 0xBB, 0x63, 0x9D, 0xBB, 0x5F, 
	0x9D, 0xBD, 0x59, 0x9E, 0xBE, 0x51, 0x9D, 0xBF, 0x48, 0x9C, 
	0xC0, 0x35, 0xA7, 0xCF, 0x36, 0x95, 0xBD, 0x31, 0x4E, 0x78, 
	0xFF, 0xFF, 0xFF, 0x31, 0x4E, 0x78, 0xEA, 0xEE, 0xF2, 0xA0, 
	0xBA, 0xCC, 0x8A, 0xB1, 0xC7, 0xC2, 0xE5, 0xF1, 0xA7, 0xD6, 
	0xE6, 0x93, 0xCA, 0xDF, 0x80, 0xBF, 0xD8, 0x70, 0xB6, 0xD2, 
	0x63, 0xAE, 0xCC, 0x57, 0xA6, 0xC7, 0x4C, 0x9F, 0xC2, 0x3B, 
	0xA9, 0xD0, 0x39, 0x98, 0xBF, 0x31, 0x4E, 0x78, 0xFF, 0xFF, 
	0xFF, 0x31, 0x4E, 0x78, 0xF3, 0xF5, 0xF8, 0xAF, 0xC4, 0xD4, 
	0x84, 0xAB, 0xC3, 0x90, 0x8D, 0xA1, 0x88, 0xA4, 0xBA, 0x78, 
	0xAB, 0xC5, 0x74, 0xAC, 0xC7, 0x6E, 0xAD, 0xC9, 0x64, 0xAA, 
	0xC7, 0x5B, 0xA9, 0xC8, 0x51, 0xA8, 0xCA, 0x40, 0xB1, 0xD7, 
	0x3D, 0x9A, 0xC0, 0x31, 0x4E, 0x78, 0xFF, 0xFF, 0xFF, 0x31, 
	0x4E, 0x78, 0xFC, 0xFC, 0xFD, 0xB5, 0xC9, 0xD8, 0x85, 0xAB, 
	0xC3, 0xB5, 0x26, 0x33, 0xBF, 0x5C, 0x65, 0xBA, 0x4D, 0x57, 
	0xBA, 0x53, 0x5D, 0xB4, 0x5E, 0x69, 0xAB, 0x67, 0x75, 0x94, 
	0x70, 0x82, 0x87, 0x71, 0x87, 0x72, 0x8D, 0xA7, 0x41, 0x9B, 
	0xC0, 0x31, 0x4E, 0x78, 0xFF, 0xFF, 0xFF, 0x3F, 0x5B, 0x82, 
	0x65, 0x7B, 0x9B, 0x6D, 0x8A, 0xA8, 0x61, 0x8D, 0xAB, 0xB5, 
	0x26, 0x33, 0xFB, 0xDB, 0xDC, 0xFF, 0xD5, 0xD5, 0xFB, 0xBE, 
	0xBF, 0xF2, 0xA2, 0xA4, 0xE9, 0x8B, 0x8E, 0xE1, 0x78, 0x7C, 
	0xDD, 0x73, 0x78, 0xC6, 0x5F, 0x67, 0x6B, 0x7F, 0x9B, 0x31, 
	0x4E, 0x78, 0xFF, 0xFF, 0xFF, 0xDF, 0xE4, 0xEA, 0xCB, 0xD3, 
	0xDD, 0xB1, 0xBC, 0xCC, 0x95, 0xA5, 0xBB, 0xBA, 0x4D, 0x57, 
	0xC0, 0x74, 0x7E, 0xDD, 0xA0, 0xA5, 0xF0, 0xBF, 0xC1, 0xFF, 
	0xD0, 0xD0, 0xFF, 0xC0, 0xC0, 0xFF, 0xB1, 0xB1, 0xFE, 0xA0, 
	0xA0, 0xBA, 0x4D, 0x57, 0x88, 0x71, 0x88, 0x31, 0x4E, 0x78, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xFC, 0xED, 0xD1, 
	0xD4, 0xDB, 0xA3, 0xA8, 0xCB, 0x78, 0x80, 0xF9, 0xDA, 0xDB, 
	0xFF, 0xDA, 0xDA, 0xEA, 0xAB, 0xAF, 0xC1, 0x63, 0x6D, 0xBA, 
	0x4D, 0x57, 0x7D, 0x7F, 0x99, 0x31, 0x4E, 0x78, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xDA, 0xA0, 0xA5, 0xD1, 0x89, 0x8F, 0xDC, 0x9F, 
	0xA5, 0xCA, 0x72, 0x7B, 0xEB, 0xCB, 0xCE, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
};

wxBitmap& paste_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( paste_bmp, sizeof( paste_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //PASTE_BMP_H

#ifndef RUN_BMP_H
#define RUN_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char run_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFA, 0xFA, 0x50, 
	0x82, 0xA4, 0x21, 0x72, 0x20, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFC, 0xFC, 0xFC, 0x50, 0x82, 0xA4, 0x67, 0xC1, 0xDF, 
	0x21, 0x72, 0x20, 0x21, 0x72, 0x20, 0xFE, 0xFE, 0xFE, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0x50, 
	0x82, 0xA4, 0x67, 0xC1, 0xDF, 0x67, 0xC1, 0xDF, 0x21, 0x72, 
	0x20, 0x44, 0xA2, 0x44, 0x21, 0x72, 0x20, 0xFE, 0xFE, 0xFE, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFE, 0xFE, 0xFE, 0x50, 0x82, 0xA4, 0x7F, 0xCC, 0xE5, 
	0x7F, 0xCC, 0xE4, 0x50, 0x82, 0xA4, 0x21, 0x72, 0x20, 0x69, 
	0xBC, 0x69, 0x44, 0xA2, 0x44, 0x21, 0x72, 0x20, 0xFC, 0xFC, 
	0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0x50, 
	0x82, 0xA4, 0x9A, 0xD6, 0xEA, 0x9B, 0xD6, 0xE9, 0x50, 0x82, 
	0xA4, 0x43, 0xB3, 0xD8, 0x23, 0x74, 0x23, 0x6A, 0xBC, 0x6A, 
	0x69, 0xBC, 0x69, 0x44, 0xA2, 0x44, 0x21, 0x72, 0x20, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFE, 0xFE, 0xFE, 0x50, 0x82, 0xA4, 0xC8, 0xE9, 0xF3, 
	0xB3, 0xE1, 0xEF, 0x50, 0x82, 0xA4, 0x43, 0xB3, 0xD8, 0x43, 
	0xB3, 0xD8, 0x29, 0x79, 0x29, 0x6C, 0xBE, 0x6C, 0x69, 0xBC, 
	0x69, 0x69, 0xBC, 0x69, 0x44, 0xA2, 0x44, 0x21, 0x72, 0x20, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xFB, 0x58, 
	0x88, 0xA8, 0xD7, 0xEF, 0xF6, 0xD7, 0xEF, 0xF6, 0x50, 0x82, 
	0xA4, 0x52, 0xB9, 0xDB, 0x52, 0xB9, 0xDB, 0x52, 0xB9, 0xDB, 
	0x38, 0x84, 0x38, 0x78, 0xC3, 0x79, 0x97, 0xD4, 0x96, 0x98, 
	0xD6, 0x98, 0x69, 0xBC, 0x69, 0x44, 0xA2, 0x44, 0x21, 0x72, 
	0x20, 0xFF, 0xFF, 0xFF, 0xF8, 0xFA, 0xFB, 0xFD, 0xFD, 0xFD, 
	0x56, 0x87, 0xA7, 0x50, 0x82, 0xA4, 0x6A, 0xC3, 0xE0, 0x67, 
	0xC2, 0xE0, 0x67, 0xC1, 0xDF, 0x67, 0xC1, 0xDF, 0x52, 0x96, 
	0x51, 0xA8, 0xD9, 0xA9, 0xB5, 0xE0, 0xB3, 0xAF, 0xDE, 0xAE, 
	0xA0, 0xD7, 0xA0, 0x79, 0xC3, 0x79, 0x51, 0xA8, 0x51, 0x23, 
	0x79, 0x22, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0x1D, 0xA5, 
	0xD1, 0xB7, 0xE3, 0xF0, 0x8E, 0xD1, 0xE7, 0x1D, 0xA5, 0xD1, 
	0x7F, 0xCB, 0xE5, 0x7F, 0xCB, 0xE5, 0x5B, 0x9F, 0x5C, 0xC6, 
	0xE7, 0xC7, 0xCC, 0xEE, 0xCC, 0xBA, 0xE0, 0xBA, 0x8E, 0xCC, 
	0x8E, 0x69, 0xB6, 0x69, 0x24, 0x7D, 0x23, 0xFB, 0xFB, 0xFB, 
	0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0xF9, 0xFD, 0xFE, 0xED, 
	0xF8, 0xFB, 0x1D, 0xA5, 0xD1, 0xA2, 0xDA, 0xEC, 0x1D, 0xA5, 
	0xD1, 0x9A, 0xD7, 0xEA, 0x6C, 0xAA, 0x6B, 0xC8, 0xE8, 0xC9, 
	0xD6, 0xF4, 0xD6, 0xBB, 0xE0, 0xBC, 0x89, 0xC6, 0x89, 0x24, 
	0x7D, 0x23, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0xF9, 0xFC, 0xFE, 
	0xF2, 0xFA, 0xFC, 0x1D, 0xA5, 0xD1, 0xB7, 0xE3, 0xF0, 0xB7, 
	0xE3, 0xF0, 0x70, 0xAE, 0x70, 0xE8, 0xFF, 0xE8, 0xDC, 0xF6, 
	0xDC, 0xB4, 0xDA, 0xB6, 0x24, 0x7D, 0x23, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0xF2, 0xFA, 
	0xFC, 0xEB, 0xF7, 0xFA, 0x1D, 0xA5, 0xD1, 0xD0, 0xEC, 0xF5, 
	0x85, 0xB7, 0x86, 0xE8, 0xFF, 0xE8, 0xD0, 0xE7, 0xD0, 0x76, 
	0xAF, 0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 0xEB, 
	0xF7, 0xFA, 0xEB, 0xF7, 0xFA, 0xEB, 0xF7, 0xFA, 0x99, 0xC2, 
	0x99, 0xE8, 0xFF, 0xE8, 0x74, 0xAD, 0x74, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 
	0xEB, 0xF7, 0xFA, 0x50, 0x82, 0xA4, 0x99, 0xC2, 0x99, 0x83, 
	0xB9, 0x84, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 
	0xA4, 0xFF, 0xFF, 0xFF, 0x99, 0xC2, 0x99, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
};

wxBitmap& run_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( run_bmp, sizeof( run_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //RUN_BMP_H

#ifndef ABOUT_BMP_H
#define ABOUT_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char about_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAB, 0x89, 
	0x6F, 0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xBD, 0x9C, 0x7B, 0xE5, 0xC2, 0x9E, 0xBD, 
	0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0x9C, 
	0x7B, 0xE5, 0xC2, 0x9E, 0xE5, 0xC2, 0x9E, 0xBD, 0x9C, 0x7B, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0x9C, 0x7B, 
	0xBD, 0x9C, 0x7B, 0xBD, 0x9C, 0x7B, 0xEC, 0xCB, 0xA9, 0xEB, 
	0xC8, 0xA6, 0xE5, 0xC2, 0x9E, 0xBD, 0x9C, 0x7B, 0xBD, 0x9C, 
	0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xBD, 0x9C, 0x7B, 0xEC, 0xCB, 0xA9, 0xF7, 0xD9, 
	0xB9, 0xDC, 0xAD, 0x8E, 0xE2, 0xA8, 0x82, 0xE1, 0xA7, 0x80, 
	0xDC, 0xAB, 0x88, 0xEB, 0xC9, 0xA6, 0xE3, 0xBF, 0x9B, 0xBD, 
	0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0x9C, 0x7B, 
	0xF2, 0xD5, 0xB7, 0xF8, 0xDD, 0xBF, 0xF8, 0xDD, 0xBF, 0x9C, 
	0x30, 0x00, 0x9C, 0x30, 0x00, 0x9C, 0x30, 0x00, 0x9C, 0x30, 
	0x00, 0xF2, 0xD1, 0xAF, 0xEB, 0xC9, 0xA6, 0xDA, 0xB7, 0x95, 
	0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xD3, 0xBD, 0xA3, 0xEC, 0xCB, 0xA9, 0xFB, 0xE1, 
	0xC6, 0xFB, 0xE2, 0xC6, 0xFB, 0xE2, 0xC6, 0xFC, 0xE4, 0xCA, 
	0xCC, 0x5E, 0x29, 0x9C, 0x30, 0x00, 0xFA, 0xDF, 0xC3, 0xF6, 
	0xD7, 0xB7, 0xF3, 0xD3, 0xB1, 0xE9, 0xC6, 0xA4, 0xDF, 0xBA, 
	0x97, 0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xD3, 0xBD, 0xA3, 0xFC, 0xE3, 0xC9, 0xFD, 0xE5, 0xCE, 0xFD, 
	0xE6, 0xD0, 0xFD, 0xE6, 0xD0, 0xFD, 0xE7, 0xD1, 0xCC, 0x5E, 
	0x29, 0x9C, 0x30, 0x00, 0xFA, 0xE0, 0xC6, 0xF7, 0xD9, 0xBA, 
	0xF6, 0xD7, 0xB6, 0xEF, 0xCE, 0xAB, 0xE5, 0xC2, 0x9E, 0xBD, 
	0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD3, 0xBD, 
	0xA3, 0xFD, 0xE9, 0xD4, 0xFE, 0xEC, 0xDA, 0xFE, 0xEE, 0xDF, 
	0xFE, 0xEE, 0xDF, 0xFE, 0xE9, 0xD5, 0xCC, 0x5E, 0x29, 0x9C, 
	0x30, 0x00, 0xFB, 0xE2, 0xC9, 0xF9, 0xDC, 0xBE, 0xF7, 0xD9, 
	0xB9, 0xF3, 0xD3, 0xB1, 0xEB, 0xC9, 0xA6, 0xBD, 0x9C, 0x7B, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD3, 0xBD, 0xA3, 0xFE, 
	0xED, 0xDD, 0xFE, 0xF2, 0xE5, 0xFE, 0xF4, 0xE9, 0xFE, 0xEE, 
	0xDE, 0x9C, 0x30, 0x00, 0x9C, 0x30, 0x00, 0x9C, 0x30, 0x00, 
	0xFC, 0xE4, 0xCB, 0xF9, 0xDE, 0xC1, 0xF8, 0xDA, 0xBB, 0xF5, 
	0xD5, 0xB4, 0xEE, 0xCC, 0xAA, 0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xD3, 0xBD, 0xA3, 0xFE, 0xF2, 0xE5, 
	0xFE, 0xF5, 0xEC, 0xFE, 0xF8, 0xF2, 0xF6, 0xEF, 0xE5, 0xFC, 
	0xE5, 0xCD, 0xFC, 0xE5, 0xCD, 0xFC, 0xE5, 0xCD, 0xFC, 0xE5, 
	0xCD, 0xFA, 0xE0, 0xC3, 0xF8, 0xDC, 0xBD, 0xF6, 0xD7, 0xB6, 
	0xF0, 0xCF, 0xAD, 0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xD3, 0xBD, 0xA3, 0xF2, 0xD5, 0xB7, 0xFE, 0xF7, 
	0xEF, 0xFE, 0xFB, 0xF7, 0xFE, 0xFB, 0xF7, 0xF2, 0xBD, 0x9B, 
	0x9C, 0x30, 0x00, 0xF2, 0xBD, 0x9B, 0xFC, 0xE5, 0xCD, 0xFA, 
	0xE0, 0xC3, 0xF8, 0xDC, 0xBD, 0xF6, 0xD7, 0xB6, 0xEF, 0xCB, 
	0xA1, 0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xD3, 0xBD, 0xA3, 0xFE, 0xF6, 0xED, 0xFE, 
	0xF9, 0xF4, 0xFE, 0xF9, 0xF4, 0x9C, 0x30, 0x00, 0x9C, 0x30, 
	0x00, 0x9C, 0x30, 0x00, 0xF8, 0xE0, 0xC8, 0xFA, 0xE0, 0xC3, 
	0xF8, 0xDC, 0xBD, 0xF6, 0xD7, 0xB6, 0xBD, 0x9C, 0x7B, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xD3, 0xBD, 0xA3, 0xF2, 0xD5, 0xB7, 0xFE, 0xF6, 0xED, 
	0xFE, 0xF6, 0xED, 0xF2, 0xBD, 0x9B, 0x9C, 0x30, 0x00, 0xF2, 
	0xBD, 0x9B, 0xF8, 0xE0, 0xC8, 0xF9, 0xDF, 0xC2, 0xF8, 0xDB, 
	0xBC, 0xEF, 0xCB, 0xA1, 0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xD3, 0xBD, 0xA3, 0xD3, 0xBD, 0xA3, 0xF9, 0xEB, 
	0xDB, 0xFE, 0xEE, 0xDD, 0xFD, 0xEA, 0xD7, 0xFC, 0xE5, 0xCC, 
	0xFB, 0xE1, 0xC6, 0xEF, 0xCB, 0xA1, 0xBD, 0x9C, 0x7B, 0xBD, 
	0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD3, 0xBD, 0xA3, 0xD3, 
	0xBD, 0xA3, 0xD3, 0xBD, 0xA3, 0xD3, 0xBD, 0xA3, 0xD3, 0xBD, 
	0xA3, 0xBD, 0x9C, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
};

wxBitmap& about_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( about_bmp, sizeof( about_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //ABOUT_BMP_H

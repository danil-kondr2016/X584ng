#ifndef STEP_BMP_H
#define STEP_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char step_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x0B, 0x6F, 0x9F, 0x0B, 0x6F, 0x9F, 0x0B, 0x6F, 0x9F, 0x0B, 
	0x6F, 0x9F, 0x0B, 0x6F, 0x9F, 0x0B, 0x6F, 0x9F, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0B, 0x6F, 
	0x9F, 0x22, 0xBC, 0xE3, 0x22, 0xBC, 0xE3, 0x22, 0xBC, 0xE3, 
	0x22, 0xBC, 0xE3, 0x0B, 0x6F, 0x9F, 0xD0, 0x7D, 0x2B, 0xD0, 
	0x7D, 0x2B, 0xD0, 0x7D, 0x2B, 0xD0, 0x7D, 0x2B, 0xD0, 0x7D, 
	0x2B, 0xD0, 0x7D, 0x2B, 0xC9, 0x7E, 0x33, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0B, 
	0x6F, 0x9F, 0x42, 0xC3, 0xE3, 0x42, 0xC3, 0xE3, 0x42, 0xC3, 
	0xE3, 0x0B, 0x6F, 0x9F, 0xE1, 0xAC, 0x78, 0xE1, 0xAC, 0x78, 
	0xE3, 0xAF, 0x7D, 0xE1, 0xAC, 0x78, 0xE0, 0xA9, 0x72, 0xDF, 
	0xA5, 0x6B, 0xD0, 0x7D, 0x2B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x0B, 0x6F, 0x9F, 0x8A, 0xDA, 0xEC, 
	0x8A, 0xDA, 0xEC, 0x8A, 0xDA, 0xEC, 0x8A, 0xDA, 0xEC, 0x0B, 
	0x6F, 0x9F, 0xE3, 0xB2, 0x80, 0xE5, 0xB5, 0x85, 0xE5, 0xB6, 
	0x87, 0xE4, 0xB3, 0x83, 0xE2, 0xAE, 0x7A, 0xE0, 0xA9, 0x72, 
	0xD0, 0x7D, 0x2B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x04, 
	0x96, 0xC7, 0x8A, 0xDA, 0xEC, 0x8A, 0xDA, 0xEC, 0x0B, 0x6F, 
	0x9F, 0x0B, 0x6F, 0x9F, 0x8A, 0xDA, 0xEC, 0x0B, 0x6F, 0x9F, 
	0xEA, 0xC0, 0x97, 0xE9, 0xC0, 0x96, 0xE9, 0xBD, 0x96, 0xE7, 
	0xBC, 0x93, 0xE5, 0xB6, 0x88, 0xE2, 0xAF, 0x7C, 0xD0, 0x7D, 
	0x2B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x04, 0x96, 0xC7, 
	0x8A, 0xDA, 0xEC, 0x0B, 0x6F, 0x9F, 0xFF, 0xFF, 0xFF, 0xDE, 
	0xB8, 0x8F, 0x0B, 0x6F, 0x9F, 0x0B, 0x6F, 0x9F, 0xF2, 0xDA, 
	0xC4, 0xEE, 0xD2, 0xB5, 0xE9, 0xC5, 0xA2, 0xE9, 0xC1, 0x9A, 
	0xE6, 0xB8, 0x8B, 0xE2, 0xB0, 0x7D, 0xC9, 0x7E, 0x33, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x04, 0x96, 0xC7, 0x8A, 0xDA, 
	0xEC, 0x0B, 0x6F, 0x9F, 0xFF, 0xFF, 0xFF, 0xE7, 0xC9, 0xAC, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xFB, 0xF6, 0xF1, 0xF8, 
	0xEE, 0xE4, 0xF2, 0xDA, 0xC5, 0xEF, 0xD2, 0xB6, 0xEC, 0xCB, 
	0xA9, 0xE9, 0xC2, 0x9A, 0xC9, 0x7E, 0x33, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0x04, 0x96, 0xC7, 0xBB, 0xE4, 0xF0, 0x0B, 
	0x6F, 0x9F, 0xFF, 0xFF, 0xFF, 0xE7, 0xC9, 0xAC, 0xE7, 0xC9, 
	0xAC, 0xE3, 0xC0, 0x9E, 0xD9, 0xAA, 0x7A, 0xD3, 0x9A, 0x5F, 
	0xCE, 0x8B, 0x49, 0xCD, 0x89, 0x46, 0xCC, 0x86, 0x42, 0xC9, 
	0x7E, 0x33, 0xC9, 0x7E, 0x33, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0x04, 0x96, 0xC7, 0xBB, 0xE4, 0xF0, 0xBB, 0xE4, 0xF0, 
	0x0B, 0x6F, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x04, 0x96, 0xC7, 0xBB, 0xE4, 0xF0, 0xBB, 0xE4, 
	0xF0, 0x0B, 0x6F, 0x9F, 0x0B, 0x6F, 0x9F, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0x04, 0x96, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x04, 0x96, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x04, 0x96, 0xC7, 0x04, 0x96, 0xC7, 
	0x04, 0x96, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
};

wxBitmap& step_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( step_bmp, sizeof( step_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //STEP_BMP_H

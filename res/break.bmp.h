#ifndef BREAK_BMP_H
#define BREAK_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char break_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 
	0xA4, 0x50, 0x82, 0xA4, 0x50, 0x82, 0xA4, 0x50, 0x82, 0xA4, 
	0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 0x50, 0x82, 0xA4, 0x50, 
	0x82, 0xA4, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 0x56, 
	0xBE, 0xE1, 0x2A, 0xAD, 0xD9, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 
	0xFF, 0x50, 0x82, 0xA4, 0x56, 0xBE, 0xE1, 0x2A, 0xAD, 0xD9, 
	0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 0x56, 0xBE, 0xE1, 
	0x60, 0xC2, 0xE3, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0x50, 
	0x82, 0xA4, 0x56, 0xBE, 0xE1, 0x56, 0xBE, 0xE1, 0x50, 0x82, 
	0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x50, 0x82, 0xA4, 0x56, 0xBE, 0xE1, 0x60, 0xC2, 
	0xE3, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 
	0x56, 0xBE, 0xE1, 0x60, 0xC2, 0xE3, 0x50, 0x82, 0xA4, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x50, 0x82, 0xA4, 0x56, 0xBE, 0xE1, 0x77, 0xCB, 0xE7, 0x50, 
	0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 0x56, 0xBE, 
	0xE1, 0x77, 0xCB, 0xE7, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 
	0xA4, 0x6D, 0xC7, 0xE5, 0x97, 0xD7, 0xEC, 0x50, 0x82, 0xA4, 
	0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 0x6D, 0xC7, 0xE5, 0x97, 
	0xD7, 0xEC, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x82, 0xA4, 0x79, 
	0xCC, 0xE7, 0x97, 0xD7, 0xEC, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 
	0xFF, 0x50, 0x82, 0xA4, 0x79, 0xCC, 0xE7, 0x97, 0xD7, 0xEC, 
	0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x3C, 0x8F, 0xB4, 0x97, 0xD7, 0xEC, 
	0x97, 0xD7, 0xEC, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0x3C, 
	0x8F, 0xB4, 0x97, 0xD7, 0xEC, 0x97, 0xD7, 0xEC, 0x50, 0x82, 
	0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0xBB, 0xE5, 0xF3, 0x97, 0xD7, 
	0xEC, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 
	0xBB, 0xE5, 0xF3, 0x97, 0xD7, 0xEC, 0x50, 0x82, 0xA4, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x1D, 0xA5, 0xD1, 0xD5, 0xEF, 0xF8, 0x97, 0xD7, 0xEC, 0x50, 
	0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0xD5, 0xEF, 
	0xF8, 0x97, 0xD7, 0xEC, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 
	0xD1, 0xFF, 0xFF, 0xFF, 0x97, 0xD7, 0xEC, 0x50, 0x82, 0xA4, 
	0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0xFF, 0xFF, 0xFF, 0x97, 
	0xD7, 0xEC, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0xFF, 
	0xFF, 0xFF, 0x97, 0xD7, 0xEC, 0x50, 0x82, 0xA4, 0xFF, 0xFF, 
	0xFF, 0x1D, 0xA5, 0xD1, 0xFF, 0xFF, 0xFF, 0x97, 0xD7, 0xEC, 
	0x50, 0x82, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x1D, 0xA5, 0xD1, 0x1D, 0xA5, 0xD1, 
	0x2D, 0x98, 0xC1, 0x3E, 0x8D, 0xB4, 0xFF, 0xFF, 0xFF, 0x1D, 
	0xA5, 0xD1, 0x1D, 0xA5, 0xD1, 0x2D, 0x98, 0xC1, 0x3E, 0x8D, 
	0xB4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
};

wxBitmap& break_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( break_bmp, sizeof( break_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //BREAK_BMP_H

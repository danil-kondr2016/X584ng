#ifndef EXIT_BMP_H
#define EXIT_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char exit_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x73, 0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0x94, 0x52, 0x29, 0x94, 
	0x52, 0x29, 0x29, 0x29, 0x29, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0xB5, 0x73, 
	0x39, 0xC6, 0x73, 0x39, 0xC6, 0x73, 0x39, 0xB5, 0x73, 0x39, 
	0x29, 0x29, 0x29, 0x73, 0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0x73, 
	0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0x73, 0x5A, 
	0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x73, 0x5A, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 
	0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xB5, 0x73, 0x39, 0x29, 0x29, 
	0x29, 0xB5, 0x7B, 0x5A, 0xC6, 0x7B, 0x4A, 0xD6, 0x94, 0x6B, 
	0xE7, 0xAD, 0x73, 0xE7, 0xAD, 0x73, 0x73, 0x5A, 0x4A, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 
	0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 
	0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0x29, 0x29, 0x29, 0x08, 
	0x9C, 0x08, 0x08, 0x9C, 0x08, 0x08, 0x9C, 0x08, 0x08, 0x9C, 
	0x08, 0xE7, 0xAD, 0x73, 0x73, 0x5A, 0x4A, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0xC6, 
	0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 
	0x4A, 0xC6, 0x7B, 0x4A, 0x29, 0x29, 0x29, 0x08, 0x9C, 0x08, 
	0x08, 0x9C, 0x08, 0x08, 0x9C, 0x08, 0x08, 0x9C, 0x08, 0xE7, 
	0xAD, 0x73, 0x73, 0x5A, 0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0xC6, 0x7B, 0x4A, 
	0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 
	0x7B, 0x4A, 0x29, 0x29, 0x29, 0x08, 0x9C, 0x08, 0x08, 0x9C, 
	0x08, 0x08, 0x9C, 0x08, 0x08, 0x9C, 0x08, 0xE7, 0xAD, 0x73, 
	0x73, 0x5A, 0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 
	0x4A, 0xD6, 0x94, 0x6B, 0xEF, 0xD6, 0xD6, 0xB5, 0x84, 0x7B, 
	0x29, 0x29, 0x29, 0x08, 0x9C, 0x08, 0x08, 0x9C, 0x08, 0x10, 
	0x10, 0x10, 0x10, 0x10, 0x10, 0xE7, 0xAD, 0x73, 0x73, 0x5A, 
	0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x73, 0x5A, 0x4A, 0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0xD6, 
	0x94, 0x6B, 0xFF, 0xFF, 0xFF, 0xB5, 0x84, 0x7B, 0x29, 0x29, 
	0x29, 0xFF, 0xCE, 0x94, 0xE7, 0xAD, 0x73, 0xE7, 0xAD, 0x73, 
	0xE7, 0xAD, 0x73, 0xE7, 0xAD, 0x73, 0x73, 0x5A, 0x4A, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 
	0x4A, 0xD6, 0x94, 0x6B, 0xD6, 0x94, 0x6B, 0xD6, 0x94, 0x6B, 
	0xD6, 0x94, 0x6B, 0xC6, 0x7B, 0x4A, 0x29, 0x29, 0x29, 0xFF, 
	0xCE, 0x94, 0xF7, 0xD6, 0xAD, 0xF7, 0xD6, 0xAD, 0xF7, 0xD6, 
	0xAD, 0xE7, 0xAD, 0x73, 0x73, 0x5A, 0x4A, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0xD6, 
	0x94, 0x6B, 0xD6, 0x94, 0x6B, 0xD6, 0x94, 0x6B, 0xD6, 0x94, 
	0x6B, 0xC6, 0x7B, 0x4A, 0x29, 0x29, 0x29, 0xFF, 0xCE, 0x94, 
	0xF7, 0xD6, 0xAD, 0xF7, 0xD6, 0xAD, 0xF7, 0xD6, 0xAD, 0xE7, 
	0xAD, 0x73, 0x73, 0x5A, 0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0xD6, 0x94, 0x6B, 
	0xD6, 0x94, 0x6B, 0xD6, 0x94, 0x6B, 0xD6, 0x94, 0x6B, 0xC6, 
	0x7B, 0x4A, 0x29, 0x29, 0x29, 0xFF, 0xCE, 0x94, 0xF7, 0xD6, 
	0xAD, 0xF7, 0xD6, 0xAD, 0xF7, 0xD6, 0xAD, 0xE7, 0xAD, 0x73, 
	0x73, 0x5A, 0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0xD6, 0x94, 0x6B, 0xD6, 0x94, 
	0x6B, 0xE7, 0xAD, 0x73, 0xD6, 0x94, 0x6B, 0xD6, 0x94, 0x6B, 
	0x29, 0x29, 0x29, 0xFF, 0xCE, 0x94, 0xF7, 0xD6, 0xAD, 0xF7, 
	0xD6, 0xAD, 0xF7, 0xD6, 0xAD, 0xE7, 0xAD, 0x73, 0x73, 0x5A, 
	0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x73, 0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0xD6, 0x94, 0x6B, 0xD6, 
	0x94, 0x6B, 0xE7, 0xAD, 0x73, 0xD6, 0x94, 0x6B, 0x29, 0x29, 
	0x29, 0xFF, 0xCE, 0x94, 0xF7, 0xD6, 0xAD, 0xF7, 0xD6, 0xAD, 
	0xF7, 0xD6, 0xAD, 0xE7, 0xAD, 0x73, 0x73, 0x5A, 0x4A, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 0x4A, 0x94, 0x63, 0x39, 
	0xC6, 0x7B, 0x4A, 0xC6, 0x7B, 0x4A, 0x29, 0x29, 0x29, 0x73, 
	0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0x73, 0x5A, 
	0x4A, 0x73, 0x5A, 0x4A, 0x73, 0x5A, 0x4A, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x5A, 
	0x4A, 0x73, 0x5A, 0x4A, 0x29, 0x29, 0x29, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
};

wxBitmap& exit_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( exit_bmp, sizeof( exit_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //EXIT_BMP_H

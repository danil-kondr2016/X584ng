#ifndef SAVE_BMP_H
#define SAVE_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char save_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0xA8, 
	0x6E, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 
	0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 
	0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 
	0x00, 0xE2, 0xA8, 0x6E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCC, 0x66, 0x00, 0xEF, 
	0xCE, 0xAF, 0xEC, 0xC6, 0x9F, 0xE9, 0xBC, 0x8F, 0xE6, 0xB3, 
	0x80, 0xE3, 0xA9, 0x70, 0xDF, 0xA0, 0x60, 0xDC, 0x96, 0x51, 
	0xD9, 0x8D, 0x42, 0xD7, 0x85, 0x34, 0xD4, 0x7D, 0x27, 0xCC, 
	0x66, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xCC, 0x66, 0x00, 0xF2, 0xD8, 0xBD, 
	0xD2, 0x79, 0x1F, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 
	0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 
	0x00, 0xCC, 0x66, 0x00, 0xD6, 0x85, 0x34, 0xCC, 0x66, 0x00, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xCC, 0x66, 0x00, 0xF5, 0xE0, 0xCB, 0xD6, 0x83, 
	0x30, 0xFF, 0xFF, 0xFF, 0xE2, 0xA8, 0x6E, 0xCC, 0x66, 0x00, 
	0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 
	0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 
	0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xE2, 0xA8, 0x6E, 
	0xCC, 0x66, 0x00, 0xF7, 0xE8, 0xD9, 0xD9, 0x8C, 0x40, 0xFF, 
	0xFF, 0xFF, 0xCC, 0x66, 0x00, 0xEF, 0xCE, 0xAF, 0xEC, 0xC6, 
	0x9F, 0xE9, 0xBC, 0x8F, 0xE6, 0xB3, 0x80, 0xE3, 0xA9, 0x70, 
	0xDF, 0xA0, 0x60, 0xDC, 0x96, 0x51, 0xD9, 0x8D, 0x42, 0xD7, 
	0x85, 0x34, 0xD4, 0x7D, 0x27, 0xCC, 0x66, 0x00, 0xCC, 0x66, 
	0x00, 0xF9, 0xEF, 0xE4, 0xD6, 0x83, 0x30, 0xFF, 0xFF, 0xFF, 
	0xCC, 0x66, 0x00, 0xF2, 0xD8, 0xBD, 0xD2, 0x79, 0x1F, 0xCC, 
	0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 
	0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 
	0xD6, 0x85, 0x34, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xFC, 
	0xF5, 0xEF, 0xD8, 0x8A, 0x3C, 0xD8, 0x89, 0x3A, 0xCC, 0x66, 
	0x00, 0xF5, 0xE0, 0xCB, 0xD6, 0x83, 0x30, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF2, 0xCE, 0xA3, 0xF2, 
	0xC3, 0x87, 0xF2, 0xC3, 0x87, 0xCC, 0x66, 0x00, 0xD9, 0x8E, 
	0x42, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xFE, 0xFB, 0xF8, 
	0xFB, 0xF5, 0xEE, 0xFA, 0xEF, 0xE5, 0xCC, 0x66, 0x00, 0xF7, 
	0xE8, 0xD9, 0xD9, 0x8C, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0x6D, 0x1E, 0xC1, 0x6D, 0x1E, 
	0xE6, 0xA8, 0x63, 0xCC, 0x66, 0x00, 0xDC, 0x97, 0x51, 0xCC, 
	0x66, 0x00, 0xCC, 0x66, 0x00, 0xFF, 0xFF, 0xFF, 0xCC, 0x66, 
	0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xF9, 0xEF, 0xE4, 
	0xD6, 0x83, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xCC, 0x66, 0x00, 0xDF, 0xA0, 0x60, 0xCC, 0x66, 0x00, 
	0xE6, 0xBD, 0x97, 0xFF, 0xFF, 0xFF, 0xE6, 0xB3, 0x80, 0xFF, 
	0xFF, 0xFF, 0xCC, 0x66, 0x00, 0xFC, 0xF5, 0xEF, 0xD8, 0x8A, 
	0x3C, 0xD8, 0x89, 0x3A, 0xD7, 0x88, 0x38, 0xD7, 0x86, 0x35, 
	0xD6, 0x84, 0x31, 0xD5, 0x81, 0x2D, 0xD4, 0x7E, 0x28, 0xCC, 
	0x66, 0x00, 0xE3, 0xA9, 0x6F, 0xCC, 0x66, 0x00, 0xE6, 0xBD, 
	0x97, 0xFF, 0xFF, 0xFF, 0xE6, 0xB3, 0x80, 0xFF, 0xFF, 0xFF, 
	0xCC, 0x66, 0x00, 0xFE, 0xFB, 0xF8, 0xFB, 0xF5, 0xEE, 0xFA, 
	0xEF, 0xE5, 0xF7, 0xE8, 0xD8, 0xF5, 0xE0, 0xCB, 0xF2, 0xD8, 
	0xBD, 0xEF, 0xCF, 0xAE, 0xEB, 0xC6, 0x9F, 0xE9, 0xBC, 0x90, 
	0xE5, 0xB3, 0x80, 0xCC, 0x66, 0x00, 0xE6, 0xBD, 0x97, 0xFF, 
	0xFF, 0xFF, 0xE6, 0xB3, 0x80, 0xFF, 0xFF, 0xFF, 0xCC, 0x66, 
	0x00, 0xFF, 0xFF, 0xFF, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 
	0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 
	0x66, 0x00, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xE9, 0xBC, 
	0x8F, 0xCC, 0x66, 0x00, 0xFF, 0xFE, 0xFE, 0xE6, 0xBD, 0x97, 
	0xE6, 0xBD, 0x97, 0xE6, 0xBD, 0x97, 0xE6, 0xBD, 0x97, 0xFF, 
	0xFF, 0xFF, 0xE6, 0xB3, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xCC, 0x66, 0x00, 0xEC, 0xC6, 0x9F, 0xCC, 
	0x66, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xE6, 0xBD, 0x97, 0xFF, 0xFF, 0xFF, 
	0xE6, 0xB3, 0x80, 0xFF, 0xFF, 0xFF, 0xEC, 0xD4, 0xBC, 0xD9, 
	0x8C, 0x40, 0xCC, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xFF, 0xFF, 
	0xFF, 0xCC, 0x66, 0x00, 0xEE, 0xCE, 0xAF, 0xCC, 0x66, 0x00, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xE6, 0xBD, 0x97, 0xFF, 0xFF, 0xFF, 0xE6, 0xB3, 
	0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCC, 
	0x66, 0x00, 0xF2, 0xD7, 0xBD, 0xCC, 0x66, 0x00, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFE, 0xFD, 0xFC, 0xE6, 0xBD, 0x97, 0xE6, 0xBD, 0x97, 0xE6, 
	0xBD, 0x97, 0xE6, 0xBD, 0x97, 0xE6, 0xB3, 0x80, 0xE6, 0xB3, 
	0x80, 0xE6, 0xB3, 0x80, 0xE6, 0xB3, 0x80, 0xD2, 0x79, 0x20, 
	0xCC, 0x66, 0x00, 0xE2, 0xA8, 0x6E, 
};

wxBitmap& save_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( save_bmp, sizeof( save_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //SAVE_BMP_H

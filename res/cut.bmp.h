#ifndef CUT_BMP_H
#define CUT_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char cut_bmp[] =
{
	0x42, 0x4D, 0x8A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x8A, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x42, 0x47, 0x52, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF8, 0xF3, 0x8B, 0xB9, 0x8B, 
	0x0E, 0x6E, 0x0E, 0x19, 0x75, 0x19, 0x91, 0xBD, 0x91, 0xFD, 
	0xFE, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 
	0xFE, 0xFE, 0xCE, 0xE2, 0xCE, 0x01, 0x67, 0x01, 0x00, 0x66, 
	0x00, 0x00, 0x66, 0x00, 0x11, 0x70, 0x11, 0x98, 0xC1, 0x98, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 
	0xC4, 0xDB, 0xC4, 0x08, 0x65, 0x08, 0x6E, 0xA8, 0x6E, 0xAE, 
	0xCD, 0xAE, 0x04, 0x55, 0x04, 0x30, 0x84, 0x30, 0xE6, 0xF0, 
	0xE6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xC5, 0xDC, 
	0xC5, 0x00, 0x64, 0x00, 0x20, 0x72, 0x20, 0xDD, 0xEB, 0xDD, 
	0x6B, 0xA4, 0x6B, 0x28, 0x70, 0x28, 0xDA, 0xE9, 0xDA, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE4, 0xEF, 0xE4, 0x4B, 
	0x93, 0x4B, 0x00, 0x66, 0x00, 0x02, 0x67, 0x01, 0x01, 0x66, 
	0x00, 0x2C, 0x80, 0x2C, 0xE0, 0xEC, 0xE0, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFD, 
	0xFB, 0xA6, 0xCA, 0xA6, 0x82, 0xB4, 0x82, 0xC1, 0xDA, 0xC1, 
	0x87, 0xB7, 0x87, 0x02, 0x67, 0x01, 0x03, 0x6A, 0x03, 0x71, 
	0x9A, 0x60, 0xF9, 0xF7, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x6B, 0xA6, 0x6B, 0x00, 
	0x66, 0x00, 0x01, 0x67, 0x01, 0x1D, 0x77, 0x1D, 0x97, 0xC0, 
	0x96, 0xA2, 0xB6, 0x90, 0x60, 0x54, 0x0C, 0x9A, 0x67, 0x36, 
	0xF0, 0xDF, 0xD7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x05, 0x69, 0x05, 0x03, 0x68, 0x03, 
	0x14, 0x72, 0x14, 0x00, 0x66, 0x00, 0x03, 0x67, 0x01, 0x33, 
	0x61, 0x0C, 0x93, 0x53, 0x1C, 0xB8, 0x57, 0x29, 0xAD, 0x5B, 
	0x2C, 0xB0, 0x60, 0x35, 0xB8, 0x70, 0x49, 0xBD, 0x7A, 0x56, 
	0xC1, 0x83, 0x62, 0xC5, 0x8B, 0x6D, 0xDF, 0xBE, 0xAE, 0xFD, 
	0xFA, 0xF9, 0x00, 0x66, 0x00, 0x29, 0x7F, 0x29, 0xFC, 0xFD, 
	0xFB, 0x96, 0xBE, 0x95, 0x00, 0x50, 0x00, 0x17, 0x64, 0x05, 
	0x8C, 0x60, 0x24, 0xD6, 0x86, 0x5B, 0xEA, 0xD5, 0xC4, 0xEF, 
	0xE0, 0xD7, 0xED, 0xDB, 0xD0, 0xED, 0xDC, 0xD3, 0xEE, 0xDE, 
	0xD5, 0xF1, 0xE4, 0xDD, 0xD5, 0xAC, 0x96, 0xDD, 0xBA, 0xA9, 
	0x3C, 0x8A, 0x3C, 0x00, 0x66, 0x00, 0x01, 0x67, 0x01, 0x00, 
	0x66, 0x00, 0x09, 0x6C, 0x09, 0x6D, 0x9F, 0x64, 0xCC, 0xB8, 
	0xA4, 0xC9, 0x78, 0x5C, 0xDA, 0xB9, 0xA4, 0xBD, 0x7C, 0x5C, 
	0xD0, 0xA1, 0x8E, 0xCC, 0x99, 0x7F, 0xC6, 0x8D, 0x70, 0xBF, 
	0x7F, 0x5F, 0xC3, 0x87, 0x69, 0xCD, 0x9A, 0x80, 0xD7, 0xE7, 
	0xD7, 0x2B, 0x80, 0x2B, 0x01, 0x67, 0x01, 0x04, 0x68, 0x04, 
	0x52, 0x98, 0x52, 0xF6, 0xF9, 0xF5, 0xFE, 0xFD, 0xFD, 0xDF, 
	0xB3, 0xA5, 0xC1, 0x88, 0x67, 0xE2, 0xC5, 0xB6, 0xF2, 0xE5, 
	0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xDC, 0xD6, 
	0xD0, 0xA4, 0x8B, 0xEF, 0xDF, 0xD8, 0xD2, 0xA6, 0x8F, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFA, 0xF9, 0xDB, 0xB7, 
	0xAC, 0xE7, 0xD0, 0xC0, 0xCC, 0x9A, 0x80, 0xF2, 0xE5, 0xE0, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE9, 0xD3, 0xCB, 0xD7, 
	0xB1, 0x99, 0xE0, 0xC4, 0xB5, 0xCF, 0x9F, 0x88, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFA, 0xF9, 0xDB, 0xB7, 0xAC, 
	0xE7, 0xCF, 0xC0, 0xC6, 0x8D, 0x71, 0xEF, 0xDE, 0xD8, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF1, 0xEE, 0xD7, 0xAE, 
	0x99, 0xCB, 0x96, 0x7C, 0xEE, 0xDD, 0xD5, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
};

wxBitmap& cut_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( cut_bmp, sizeof( cut_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
}


#endif //CUT_BMP_H
